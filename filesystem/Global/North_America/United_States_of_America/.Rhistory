yesterday_df <- read_delim(yesterday_filename, delim = "\t")
today_df <- today_df %>%
left_join(yesterday_df %>%
rename(confirmed_daily_yesterday = Confirmed_daily,
deaths_daily_yesterday = Deaths_daily,) %>%
select(Name, confirmed_daily_yesterday,deaths_daily_yesterday),
by = "Name") %>%
mutate(
confirmed_daily_yesterday = if_else(is.na(confirmed_daily_yesterday),
0,
confirmed_daily_yesterday),
deaths_daily_yesterday = if_else(is.na(deaths_daily_yesterday),
0,
deaths_daily_yesterday),
Confirmed_change = case_when(
confirmed_daily_yesterday == 0 && Confirmed_daily == 0 ~ 0,
confirmed_daily_yesterday == 0 ~ 100,
TRUE ~ (Confirmed_daily-confirmed_daily_yesterday)/confirmed_daily_yesterday*100),
Deaths_change = case_when(
deaths_daily_yesterday == 0 && Deaths_daily == 0 ~ 0,
deaths_daily_yesterday == 0 ~ 100,
TRUE ~ (Deaths_daily-deaths_daily_yesterday)/deaths_daily_yesterday*100),
Confirmed_change = round(Confirmed_change, digits = 1),
Deaths_change = round(Deaths_change, digits = 1)) %>%
select(-c(confirmed_daily_yesterday,deaths_daily_yesterday))
write_delim(today_df,today_filename, delim = "\t")
}
}
setwd("C:/Users/jaanu/Nextcloud/Documents/postdoc/random/heatmapper/filesystem/Global/North_America/United_States_of_America/Alabama")
daily_change(state = "Alabama",
min_date = "2020-04-02")
detach("package:raster", unload = TRUE)
library(tidyverse)
library(lubridate)
daily_change <- function(state,
min_date){
prefix <- paste(state,"_", sep = "")
wd <- paste("../",state, sep = "")
setwd(wd)
files <- list.files(getwd())
files <- files[grep(pattern = ".txt", x = files)]
files <- files[!grepl(pattern = "accumulated.txt", x = files)]
dates_vec <- NULL
for (filename in files){
date <- filename %>%
stri_extract_all(regex = "\\d{4}-\\d{2}-\\d{2}") %>%
unlist()
dates_vec <- c(dates_vec,date)
}
dates_vec <- dates_vec %>% as_date()
dates_vec <- dates_vec[dates_vec > as.Date(min_date)]
for (i in 2:length(dates_vec)){
today_filename <- paste(prefix,dates_vec[i],".txt", sep = "")
today_df <- read_delim(today_filename, delim = "\t")
yesterday_filename <- paste(prefix,dates_vec[i-1],".txt", sep = "")
yesterday_df <- read_delim(yesterday_filename, delim = "\t")
today_df <- today_df %>%
left_join(yesterday_df %>%
rename(confirmed_yesterday = Confirmed,
deaths_yesterday = Deaths,) %>%
select(Name, confirmed_yesterday,deaths_yesterday),
by = "Name") %>%
mutate(Confirmed_daily = Confirmed-confirmed_yesterday,
Deaths_daily = Deaths - deaths_yesterday) %>%
select(-c(confirmed_yesterday,deaths_yesterday))
write_delim(today_df,today_filename, delim = "\t")
}
for (i in 3:length(dates_vec)){
today_filename <- paste(prefix,dates_vec[i],".txt", sep = "")
today_df <- read_delim(today_filename, delim = "\t")
yesterday_filename <- paste(prefix,dates_vec[i-1],".txt", sep = "")
yesterday_df <- read_delim(yesterday_filename, delim = "\t")
today_df <- today_df %>%
left_join(yesterday_df %>%
rename(confirmed_daily_yesterday = Confirmed_daily,
deaths_daily_yesterday = Deaths_daily,) %>%
select(Name, confirmed_daily_yesterday,deaths_daily_yesterday),
by = "Name") %>%
mutate(
confirmed_daily_yesterday = if_else(is.na(confirmed_daily_yesterday),
0,
confirmed_daily_yesterday),
deaths_daily_yesterday = if_else(is.na(deaths_daily_yesterday),
0,
deaths_daily_yesterday),
Confirmed_change = case_when(
confirmed_daily_yesterday == 0 && Confirmed_daily == 0 ~ 0,
confirmed_daily_yesterday == 0 ~ 100,
TRUE ~ (Confirmed_daily-confirmed_daily_yesterday)/confirmed_daily_yesterday*100),
Deaths_change = case_when(
deaths_daily_yesterday == 0 && Deaths_daily == 0 ~ 0,
deaths_daily_yesterday == 0 ~ 100,
TRUE ~ (Deaths_daily-deaths_daily_yesterday)/deaths_daily_yesterday*100),
Confirmed_change = round(Confirmed_change, digits = 1),
Deaths_change = round(Deaths_change, digits = 1)) %>%
select(-c(confirmed_daily_yesterday,deaths_daily_yesterday))
write_delim(today_df,today_filename, delim = "\t")
}
}
daily_change(state = "Alabama",
min_date = "2020-04-02")
print(state)
US_states <- c("Alabama","Alaska","Arizona","Arkansas","California","Colorado","Delaware",
"District_of_Columbia","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana",
"Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan",
"Minnesota","Mississippi","Missouri","Montana","Nebraska","New_Hampshire","New_Jersey",
"New_Mexico","New_York","Nevada","North_Carolina","North_Dakota","Ohio","Oklahoma","Oregon",
"Pennsylvania","Rhode_Island","South_Carolina","South_Dakota","Tennessee","Texas",
"Utah","Washington","Vermont","West_Virginia","Virginia","Wisconsin","Wyoming")
for (state in US_states){
print(state)
daily_change(state = state,
min_date = "2020-04-02")
}
for (state in US_states){
print(state)
daily_change(state = state,
min_date = "2020-04-01")
}
North_America <- c("United_States_of_America","Canada")
setwd("C:/Users/jaanu/Nextcloud/Documents/postdoc/random/heatmapper/filesystem/Global/North_America/United_States_of_America")
for (country in North_America){
print(country)
daily_change(state = country,
min_date = "2020-04-01")
}
continents <- c("Europe", "North_America", "South_America", "Africa", "Asia", "Oceania")
for (country in continents){
print(country)
daily_change(state = country,
min_date = "2020-04-01")
}
setwd("C:/Users/jaanu/Nextcloud/Documents/postdoc/random/heatmapper/filesystem/Global/Africa")
continents <- c("Europe", "North_America", "South_America", "Africa", "Asia", "Oceania")
for (country in continents){
print(country)
daily_change(state = country,
min_date = "2020-04-01")
}
setwd("C:/Users/jaanu/Nextcloud/Documents/postdoc/random/heatmapper/filesystem/Global/Asia/China")
daily_change(state = "China",
min_date = "2020-04-01")
setwd("C:/Users/jaanu/Nextcloud/Documents/postdoc/random/heatmapper/filesystem/Global/Oceania/Australia")
daily_change(state = "Australia",
min_date = "2020-04-01")
runApp('C:/Users/jaanu/Nextcloud/Documents/postdoc/random/heatmapper/geomap')
files <- list.files(getwd())
files <- files[grep(pattern = ".txt", x = files)]
files <- files[!grepl(pattern = "accumulated.txt", x = files)]
dates_vec <- NULL
for (filename in files){
date <- filename %>%
stri_extract_all(regex = "\\d{4}-\\d{2}-\\d{2}") %>%
unlist()
dates_vec <- c(dates_vec,date)
}
dates_vec <- dates_vec %>% as_date()
dates_vec <- dates_vec[dates_vec > as.Date(min_date)]
min_date <- "2020-04-01"
dates_vec <- dates_vec[dates_vec > as.Date(min_date)]
setwd("C:/Users/jaanu/Nextcloud/Documents/postdoc/random/heatmapper/filesystem/Global")
state = "Global-Country"
prefix <- paste(state,"_", sep = "")
files <- list.files(getwd())
files <- files[grep(pattern = ".txt", x = files)]
files <- files[!grepl(pattern = "accumulated.txt", x = files)]
dates_vec <- NULL
dates_vec <- dates_vec %>% as_date()
dates_vec <- dates_vec[dates_vec > as.Date(min_date)]
for (i in 2:length(dates_vec)){
today_filename <- paste(prefix,dates_vec[i],".txt", sep = "")
today_df <- read_delim(today_filename, delim = "\t")
yesterday_filename <- paste(prefix,dates_vec[i-1],".txt", sep = "")
yesterday_df <- read_delim(yesterday_filename, delim = "\t")
today_df <- today_df %>%
left_join(yesterday_df %>%
rename(confirmed_yesterday = Confirmed,
deaths_yesterday = Deaths,) %>%
select(Name, confirmed_yesterday,deaths_yesterday),
by = "Name") %>%
mutate(Confirmed_daily = Confirmed-confirmed_yesterday,
Deaths_daily = Deaths - deaths_yesterday) %>%
select(-c(confirmed_yesterday,deaths_yesterday))
write_delim(today_df,today_filename, delim = "\t")
}
i = 2
dates_vec[i] %>% as.character()
dates_vec <- dates_vec %>% as_date()
dates_vec <- NULL
for (filename in files){
date <- filename %>%
stri_extract_all(regex = "\\d{4}-\\d{2}-\\d{2}") %>%
unlist()
dates_vec <- c(dates_vec,date)
}
dates_vec <- dates_vec %>% as_date()
dates_vec <- dates_vec[dates_vec > as.Date(min_date)]
for (i in 2:length(dates_vec)){
today_filename <- paste(prefix,dates_vec[i] %>% as.character(),".txt", sep = "")
today_df <- read_delim(today_filename, delim = "\t")
yesterday_filename <- paste(prefix,dates_vec[i-1],".txt", sep = "")
yesterday_df <- read_delim(yesterday_filename, delim = "\t")
today_df <- today_df %>%
left_join(yesterday_df %>%
rename(confirmed_yesterday = Confirmed,
deaths_yesterday = Deaths,) %>%
select(Name, confirmed_yesterday,deaths_yesterday),
by = "Name") %>%
mutate(Confirmed_daily = Confirmed-confirmed_yesterday,
Deaths_daily = Deaths - deaths_yesterday) %>%
select(-c(confirmed_yesterday,deaths_yesterday))
write_delim(today_df,today_filename, delim = "\t")
}
detach("package:raster", unload = TRUE)
library(tidyverse)
for (i in 2:length(dates_vec)){
today_filename <- paste(prefix,dates_vec[i] %>% as.character(),".txt", sep = "")
today_df <- read_delim(today_filename, delim = "\t")
yesterday_filename <- paste(prefix,dates_vec[i-1],".txt", sep = "")
yesterday_df <- read_delim(yesterday_filename, delim = "\t")
today_df <- today_df %>%
left_join(yesterday_df %>%
rename(confirmed_yesterday = Confirmed,
deaths_yesterday = Deaths,) %>%
select(Name, confirmed_yesterday,deaths_yesterday),
by = "Name") %>%
mutate(Confirmed_daily = Confirmed-confirmed_yesterday,
Deaths_daily = Deaths - deaths_yesterday) %>%
select(-c(confirmed_yesterday,deaths_yesterday))
write_delim(today_df,today_filename, delim = "\t")
}
for (i in 3:length(dates_vec)){
today_filename <- paste(prefix,dates_vec[i],".txt", sep = "")
today_df <- read_delim(today_filename, delim = "\t")
yesterday_filename <- paste(prefix,dates_vec[i-1],".txt", sep = "")
yesterday_df <- read_delim(yesterday_filename, delim = "\t")
today_df <- today_df %>%
left_join(yesterday_df %>%
rename(confirmed_daily_yesterday = Confirmed_daily,
deaths_daily_yesterday = Deaths_daily,) %>%
select(Name, confirmed_daily_yesterday,deaths_daily_yesterday),
by = "Name") %>%
mutate(
confirmed_daily_yesterday = if_else(is.na(confirmed_daily_yesterday),
0,
confirmed_daily_yesterday),
deaths_daily_yesterday = if_else(is.na(deaths_daily_yesterday),
0,
deaths_daily_yesterday),
Confirmed_change = case_when(
confirmed_daily_yesterday == 0 && Confirmed_daily == 0 ~ 0,
confirmed_daily_yesterday == 0 ~ 100,
TRUE ~ (Confirmed_daily-confirmed_daily_yesterday)/confirmed_daily_yesterday*100),
Deaths_change = case_when(
deaths_daily_yesterday == 0 && Deaths_daily == 0 ~ 0,
deaths_daily_yesterday == 0 ~ 100,
TRUE ~ (Deaths_daily-deaths_daily_yesterday)/deaths_daily_yesterday*100),
Confirmed_change = round(Confirmed_change, digits = 1),
Deaths_change = round(Deaths_change, digits = 1)) %>%
select(-c(confirmed_daily_yesterday,deaths_daily_yesterday))
write_delim(today_df,today_filename, delim = "\t")
}
runApp('C:/Users/jaanu/Nextcloud/Documents/postdoc/random/heatmapper/geomap')
detach("package:raster", unload = TRUE)
#WORLDOMETER----
url_worldometer <- "https://www.worldometers.info/coronavirus/"
page_worldometer <- read_html(url_worldometer)
df_worldometer <- page_worldometer %>%
html_nodes(".table") %>%
first() %>%
html_table()
#US States----
url_us_states <- "https://www.worldometers.info/coronavirus/country/us/"
page_us_states <- read_html(url_us_states)
library(rvest)
#WORLDOMETER----
url_worldometer <- "https://www.worldometers.info/coronavirus/"
page_worldometer <- read_html(url_worldometer)
df_worldometer <- page_worldometer %>%
html_nodes(".table") %>%
first() %>%
html_table()
#US States----
url_us_states <- "https://www.worldometers.info/coronavirus/country/us/"
page_us_states <- read_html(url_us_states)
df_us_states <- page_us_states %>%
html_nodes(".table") %>%
first() %>%
html_table()
df_06_apr <- df_worldometer %>%
bind_rows(df_us_states)
View(df_06_apr)
df_06_apr <- df_06_apr %>%
mutate(as_of_date = "2020-04-06")
url_world <- "https://web.archive.org/web/20200405020252/https://www.worldometers.info/coronavirus/"
page_worldometer <- read_html(url_world)
df_worldometer <- page_worldometer %>%
html_nodes(".table") %>%
first() %>%
html_table()
df_worldometer <- page_worldometer %>%
html_nodes(".main_table_countries_today") %>%
first() %>%
html_table()
df_worldometer <- page_worldometer %>%
html_nodes(".main_table_countries_today")
r
df_worldometer <- page_worldometer %>%
html_nodes("table.main_table_countries_today")
#Worldometers tests----
worldometer_scrapes <- read_delim("C:/Users/jaanu/Nextcloud/Documents/postdoc/random/heatmapper/geomap/tools/20200406_worldometer_scrape.csv", delim = ";")
#Worldometers tests----
worldometer_scrapes <- read_delim("C:/Users/jaanu/Nextcloud/Documents/postdoc/random/heatmapper/geomap/tools/20200406_worldometer_scrape.csv",
delim = ";")
worldometer_scrapes <- worldometer_scrapes %>%
mutate(as_of_date = as_date(as_of_date))
View(worldometer_scrapes)
#Worldometers tests----
worldometer_scrapes <- read_delim("C:/Users/jaanu/Nextcloud/Documents/postdoc/random/heatmapper/geomap/tools/20200406_worldometer_scrape.csv",
delim = ";")
worldometer_scrapes <- worldometer_scrapes %>%
mutate(as_of_date = as_date(as_of_date, format = "%d.%m.%Y"))
worldometer_scrapes <- worldometer_scrapes %>%
mutate(as_of_date = as_date(as_of_date, format = "%d.%m.%Y", tz = ""))
wm_names <- worldometer_scrapes %>% distinct(region)
View(wm_names)
wm_names <- worldometer_scrapes %>% distinct(region) %>% arrange(country)
View(wm_names)
wm_names <- worldometer_scrapes %>% distinct(region) %>% arrange(region)
View(wm_names)
#Worldometers tests----
worldometer_scrapes <- read_delim("C:/Users/jaanu/Nextcloud/Documents/postdoc/random/heatmapper/geomap/tools/20200406_worldometer_scrape.csv",
delim = ";")
worldometer_scrapes <- worldometer_scrapes %>%
mutate(as_of_date = as_date(as_of_date, format = "%d.%m.%Y", tz = ""),
region = case_when(
region == "S. Korea" ~ "South Korea",
region == "Serbia" ~ "Republic of Serbia",
region == "Tanzania" ~ "United Republic of Tanzania",
region == "Czechia" ~ "Czech Republic",
region == "DRC" ~ "Democratic Republic of the Congo",
region == "Congo" ~ "Republic of the Congo",
region == "CAR" ~ "Central African Republic",
region == "UAE" ~ "United Arab Emirates",
region == "Palestine" ~ "West Bank and Gaza",
region == "USA" ~ "United States of America",
region == "UK" ~ "United Kingdom",
TRUE ~ region
))
wm_names <- worldometer_scrapes %>% distinct(region) %>% arrange(region)
files <- list.files(getwd())
files <- files[grep(pattern = ".txt", x = files)]
files <- files[!grepl(pattern = "accumulated.txt", x = files)]
dates_vec <- NULL
for (filename in files){
date <- filename %>%
stri_extract_all(regex = "\\d{4}-\\d{2}-\\d{2}") %>%
unlist()
dates_vec <- c(dates_vec,date)
}
dates_vec <- dates_vec %>% as_date()
min_date = "2020-04-03"
dates_vec <- dates_vec[dates_vec > as.Date(min_date)]
prefix <- "Global-Country_"
tests_df <- worldometer_scrapes %>%
mutate(Tests_per_capita = tests_per_million/1000000) %>%
select(-tests_per_million)
View(tests_df)
date <- dates_vec[1]
today_filename <- paste(prefix,date,".txt", sep = "")
today_df <- read_delim(today_filename, delim = "\t")
total_tests_df <- tests_df %>%
filter(as_of_date == date) %>%
select(covidmapper_region, Tests, Tests_per_capita)
total_tests_df <- tests_df %>%
filter(as_of_date == date) %>%
select(region, Tests, Tests_per_capita)
today_df <- today_df %>%
left_join(total_tests_df,
by = c("Name" = "region"))
View(today_df)
prefix <- "Global-Country_"
for (date in dates_vec){
today_filename <- paste(prefix,date,".txt", sep = "")
today_df <- read_delim(today_filename, delim = "\t")
total_tests_df <- tests_df %>%
filter(as_of_date == date) %>%
select(region, Tests, Tests_per_capita)
today_df <- today_df %>%
left_join(total_tests_df,
by = c("Name" = "region"))
write_delim(today_df,today_filename, delim = "\t")
}
today_filename <- paste(prefix,date %>% as.character(),".txt", sep = "")
prefix <- "Global-Country_"
for (date in dates_vec){
today_filename <- paste(prefix,date %>% as.character(),".txt", sep = "")
today_df <- read_delim(today_filename, delim = "\t")
total_tests_df <- tests_df %>%
filter(as_of_date == date) %>%
select(region, Tests, Tests_per_capita)
today_df <- today_df %>%
left_join(total_tests_df,
by = c("Name" = "region"))
write_delim(today_df,today_filename, delim = "\t")
}
dates_vec <- dates_vec %>% as.character()
dates_vec <- dates_vec %>% as.character()
prefix <- "Global-Country_"
for (date in dates_vec){
today_filename <- paste(prefix,date %>% as.character(),".txt", sep = "")
today_df <- read_delim(today_filename, delim = "\t")
total_tests_df <- tests_df %>%
filter(as_of_date == date) %>%
select(region, Tests, Tests_per_capita)
today_df <- today_df %>%
left_join(total_tests_df,
by = c("Name" = "region"))
write_delim(today_df,today_filename, delim = "\t")
}
setwd("C:/Users/jaanu/Nextcloud/Documents/postdoc/random/heatmapper/filesystem/Global/Africa")
prefix <- "Africa_"
for (date in dates_vec){
today_filename <- paste(prefix,date %>% as.character(),".txt", sep = "")
today_df <- read_delim(today_filename, delim = "\t")
total_tests_df <- tests_df %>%
filter(as_of_date == date) %>%
select(region, Tests, Tests_per_capita)
today_df <- today_df %>%
left_join(total_tests_df,
by = c("Name" = "region"))
write_delim(today_df,today_filename, delim = "\t")
}
setwd("C:/Users/jaanu/Nextcloud/Documents/postdoc/random/heatmapper/filesystem/Global/Asia")
prefix <- "Asia_"
for (date in dates_vec){
today_filename <- paste(prefix,date %>% as.character(),".txt", sep = "")
today_df <- read_delim(today_filename, delim = "\t")
total_tests_df <- tests_df %>%
filter(as_of_date == date) %>%
select(region, Tests, Tests_per_capita)
today_df <- today_df %>%
left_join(total_tests_df,
by = c("Name" = "region"))
write_delim(today_df,today_filename, delim = "\t")
}
prefix <- "Europe_"
setwd("C:/Users/jaanu/Nextcloud/Documents/postdoc/random/heatmapper/filesystem/Global/Europe")
for (date in dates_vec){
today_filename <- paste(prefix,date %>% as.character(),".txt", sep = "")
today_df <- read_delim(today_filename, delim = "\t")
total_tests_df <- tests_df %>%
filter(as_of_date == date) %>%
select(region, Tests, Tests_per_capita)
today_df <- today_df %>%
left_join(total_tests_df,
by = c("Name" = "region"))
write_delim(today_df,today_filename, delim = "\t")
}
setwd("C:/Users/jaanu/Nextcloud/Documents/postdoc/random/heatmapper/filesystem/Global/North_America")
prefix <- "North_America_"
for (date in dates_vec){
today_filename <- paste(prefix,date %>% as.character(),".txt", sep = "")
today_df <- read_delim(today_filename, delim = "\t")
total_tests_df <- tests_df %>%
filter(as_of_date == date) %>%
select(region, Tests, Tests_per_capita)
today_df <- today_df %>%
left_join(total_tests_df,
by = c("Name" = "region"))
write_delim(today_df,today_filename, delim = "\t")
}
setwd("C:/Users/jaanu/Nextcloud/Documents/postdoc/random/heatmapper/filesystem/Global/Oceania")
prefix <- "Oceania_"
for (date in dates_vec){
today_filename <- paste(prefix,date %>% as.character(),".txt", sep = "")
today_df <- read_delim(today_filename, delim = "\t")
total_tests_df <- tests_df %>%
filter(as_of_date == date) %>%
select(region, Tests, Tests_per_capita)
today_df <- today_df %>%
left_join(total_tests_df,
by = c("Name" = "region"))
write_delim(today_df,today_filename, delim = "\t")
}
setwd("C:/Users/jaanu/Nextcloud/Documents/postdoc/random/heatmapper/filesystem/Global/South_America")
prefix <- "South_America_"
for (date in dates_vec){
today_filename <- paste(prefix,date %>% as.character(),".txt", sep = "")
today_df <- read_delim(today_filename, delim = "\t")
total_tests_df <- tests_df %>%
filter(as_of_date == date) %>%
select(region, Tests, Tests_per_capita)
today_df <- today_df %>%
left_join(total_tests_df,
by = c("Name" = "region"))
write_delim(today_df,today_filename, delim = "\t")
}
setwd("C:/Users/jaanu/Nextcloud/Documents/postdoc/random/heatmapper/filesystem/Global/North_America/United_States_of_America")
prefix <- "United_States_of_America_"
for (date in dates_vec){
today_filename <- paste(prefix,date %>% as.character(),".txt", sep = "")
today_df <- read_delim(today_filename, delim = "\t")
total_tests_df <- tests_df %>%
filter(as_of_date == date) %>%
select(region, Tests, Tests_per_capita)
today_df <- today_df %>%
left_join(total_tests_df,
by = c("Name" = "region"))
write_delim(today_df,today_filename, delim = "\t")
}
runApp('C:/Users/jaanu/Nextcloud/Documents/postdoc/random/heatmapper/geomap')
